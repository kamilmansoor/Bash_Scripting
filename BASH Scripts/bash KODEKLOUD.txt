We have a few different applications running on this system. The list of applications are stored at /tmp/assets/apps.txt file. Each application has it's logs stored in /var/log/apps directory under a file with its name. Check it out!



A simple version of the script has been developed for you /home/bob/count-requests.sh that inspects the log file of an application and prints the number of GET, POST, and DELETE requests. Update the script to use a for loop to read the list of applications from the apps.txt file and count number of requests for each application and display it in a tabular format like this.

Log name GET POST DELETE

- - - - - - - - - - - - - - - - - - - - - - - - - - -

Finance 10 20 50

Marketing 20 10 30


echo -e " Log name   \t      GET      \t      POST    \t   DELETE "
echo -e "------------------------------------------------------------"

for app in $(cat /tmp/assets/apps.txt)
do
  get_requests=$(cat /var/log/apps/${app}_app.log | grep "GET" | wc -l)
  post_requests=$(cat /var/log/apps/${app}_app.log | grep "POST" | wc -l)
  delete_requests=$(cat /var/log/apps/${app}_app.log | grep "DELETE" | wc -l)
  echo -e " ${app}    \t ${get_requests}    \t    ${post_requests}   \t   ${delete_requests}"



___________


FUNCTIONS

The script /home/bob/sum.sh does not seem to be functioning as expected. We would like the script to print the sum of 2 numbers. However it doesn't seem to be doing that.
function add() {
sum=$(( $1 + $2 ))i
echo $sum
}

result=$(add 3 5)
echo "The result is $result"


_________________________

Let's improve the create-and-launch-rocket script to use a function. The script is available at /home/bob



Move all code related to launch rocket sequence to a function named launch_rocket. Then call the function and pass in command line argument $1 as function argument so that you can run the script in the format create-and-launch-rocket lunar-mission

function launch_rocket(){
  mission_name=$1

  mkdir $mission_name

  rocket-add $mission_name

  rocket-start-power $mission_name
  rocket-internal-power $mission_name
  rocket-start-sequence $mission_name
  rocket-start-engine $mission_name
  rocket-lift-off $mission_name

  rocket_status=$(rocket-status $mission_name)

  echo "The status of launch is $rocket_status"

  if [ $rocket_status = "launching" ]
  then
    sleep 2
    rocket_status=$(rocket-status $mission_name)
  fi

  if [ $rocket_status = "failed" ]
  then
    rocket-debug
    exit 1
  fi
}
launch_rocket $1



